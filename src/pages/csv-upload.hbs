<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Import Candidates</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-bg: #ffffff;
            --secondary-bg: #f3f4f6;
            --text-color: #1f2937;
            --accent-color: #4ac1e0;
            --border-color: #d1d5db;
            --success-color: #10b981;
            --error-color: #ef4444;
            --gradient-start: #111827;
            --gradient-end: #374151;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;
            background: linear-gradient(135deg, var(--gradient-start) 0%, var(--gradient-end) 100%);
            color: var(--text-color);
            line-height: 1.5;
            margin: 0;
            padding: 40px 20px;
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .container {
            background-color: var(--primary-bg);
            border-radius: 24px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            padding: 50px;
            width: 100%;
            max-width: 560px;
            transition: all 0.3s ease;
        }

        h1 {
            font-size: 32px;
            font-weight: 700;
            margin-bottom: 32px;
            text-align: center;
            color: var(--text-color);
            letter-spacing: -0.5px;
        }

        form {
            display: flex;
            flex-direction: column;
            gap: 24px;
        }

        .form-group {
            position: relative;
        }

        label {
            font-size: 14px;
            font-weight: 600;
            margin-bottom: 8px;
            display: block;
            color: var(--text-color);
            transition: all 0.3s ease;
        }

        input[type="file"],
        select {
            width: 100%;
            padding: 14px;
            border: 2px solid var(--border-color);
            border-radius: 12px;
            font-size: 16px;
            transition: all 0.3s ease;
            background-color: var(--secondary-bg);
            color: var(--text-color);
            appearance: none;
        }

        input[type="file"]:focus,
        select:focus {
            outline: none;
            border-color: var(--accent-color);
            box-shadow: 0 0 0 3px rgba(74, 193, 224, 0.1);
        }

        .file-input-wrapper {
            position: relative;
            overflow: hidden;
            display: inline-block;
            cursor: pointer;
        }

        .file-input-wrapper input[type="file"] {
            position: absolute;
            left: 0;
            top: 0;
            opacity: 0;
            cursor: pointer;
        }

        .file-input-button {
            display: inline-block;
            padding: 14px 20px;
            background-color: var(--text-color);
            color: white;
            border-radius: 12px;
            font-weight: 600;
            text-align: center;
            transition: all 0.3s ease;
        }

        .file-input-button:hover {
            background-color: var(--accent-color);
        }

        select {
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%231f2937'%3E%3Cpath d='M7 10l5 5 5-5z'/%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: right 14px center;
            background-size: 20px;
            padding-right: 42px;
        }

        button {
            background-color: var(--text-color);
            color: white;
            border: none;
            border-radius: 12px;
            padding: 16px 24px;
            font-size: 18px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        button:hover {
            background-color: var(--accent-color);
            transform: translateY(-2px);
            box-shadow: 0 6px 8px rgba(0, 0, 0, 0.1);
        }

        #progress {
            text-align: center;
            margin-top: 24px;
            font-weight: 500;
            color: var(--accent-color);
        }

        #result {
            margin-top: 36px;
        }

        .result-item {
            background-color: var(--secondary-bg);
            border-radius: 16px;
            padding: 24px;
            margin-bottom: 20px;
            transition: all 0.3s ease;
            border-left: 5px solid var(--accent-color);
        }

        .result-item h3 {
            margin-top: 0;
            margin-bottom: 16px;
            font-size: 20px;
            font-weight: 600;
        }

        .result-item ul {
            list-style-type: none;
            padding: 0;
            margin: 0;
        }

        .result-item li {
            margin-bottom: 10px;
            display: flex;
            justify-content: space-between;
            font-size: 15px;
        }

        .result-item li span:first-child {
            font-weight: 500;
        }

        .success {
            color: var(--success-color);
        }

        .error {
            color: var(--error-color);
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .result-item {
            animation: fadeIn 0.5s ease-out;
        }

        @media (max-width: 600px) {
            .container {
                padding: 40px 24px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Import New Candidates</h1>
        <form id="uploadForm">
            <div class="form-group">
                <label for="csvFile">Choose CSV file(s)</label>
                <div class="file-input-wrapper">
                    <div class="file-input-button">Select Files</div>
                    <input type="file" id="csvFile" name="csvFile" accept=".csv" multiple>
                </div>
                <span id="fileNames" style="display: block; margin-top: 10px; font-size: 14px;"></span>
            </div>
            <div class="form-group">
                <label for="csvType">Select CSV type</label>
<select id="csvType" name="csvType">
    <option value="indeed">Indeed CSV</option>
    <option value="handshake">Handshake CSV</option>
    <option value="ziprecruiter">ZipRecruiter CSV</option>
    <option value="bulkonboarding">Bulk Onboarding CSV</option>
</select>
            </div>
            <button type="submit">Upload Files</button>
        </form>
        <div id="progress" style="display:none;">
            <svg width="38" height="38" viewBox="0 0 38 38" xmlns="http://www.w3.org/2000/svg" stroke="#4ac1e0">
                <g fill="none" fill-rule="evenodd">
                    <g transform="translate(1 1)" stroke-width="2">
                        <circle stroke-opacity=".5" cx="18" cy="18" r="18"/>
                        <path d="M36 18c0-9.94-8.06-18-18-18">
                            <animateTransform
                                attributeName="transform"
                                type="rotate"
                                from="0 18 18"
                                to="360 18 18"
                                dur="1s"
                                repeatCount="indefinite"/>
                        </path>
                    </g>
                </g>
            </svg>
            <span style="display: block; margin-top: 10px;">Uploading...</span>
        </div>
        <div id="result"></div>
    </div>

    <script>
    // JavaScript remains unchanged
    document.getElementById('csvFile').addEventListener('change', function(e) {
        const fileNames = Array.from(this.files).map(file => file.name).join(', ');
        document.getElementById('fileNames').textContent = fileNames;
    });

    document.getElementById('uploadForm').onsubmit = async function(e) {
        e.preventDefault();
        const files = this.querySelector('input[type="file"]').files;
        const csvType = this.querySelector('select[name="csvType"]').value;
        const progressDiv = document.getElementById('progress');
        const resultDiv = document.getElementById('result');

        progressDiv.style.display = 'block';
        resultDiv.innerHTML = '';

        for (let i = 0; i < files.length; i++) {
            const formData = new FormData();
            formData.append('csvFile', files[i]);
            formData.append('csvType', csvType);

            try {
                const response = await fetch('/upload-csv', {
                    method: 'POST',
                    body: formData
                });
                const data = await response.json();

                if (response.ok) {
                    resultDiv.innerHTML += `
                        <div class="result-item">
                            <h3 class="success">${files[i].name}: Upload Successful</h3>
                            <ul>
                                <li><span>Total processed:</span> <span>${data.totalProcessed}</span></li>
                                <li><span>New records created:</span> <span>${data.created}</span></li>
                                <li><span>Existing records updated:</span> <span>${data.updated}</span></li>
                            </ul>
                        </div>
                    `;
                } else {
                    resultDiv.innerHTML += `
                        <div class="result-item">
                            <h3 class="error">Error processing ${files[i].name}</h3>
                            <p>${data.message}</p>
                        </div>
                    `;
                }
            } catch (error) {
                resultDiv.innerHTML += `
                    <div class="result-item">
                        <h3 class="error">Error uploading ${files[i].name}</h3>
                        <p>${error.message}</p>
                    </div>
                `;
            }
        }

        progressDiv.style.display = 'none';
    };
    </script>
</body>
</html>